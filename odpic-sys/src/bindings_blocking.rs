/* automatically generated by rust-bindgen 0.70.1 */

extern "C" {
    pub fn dpiConn_breakExecution(conn: *mut dpiConn) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiConn_changePassword(
        conn: *mut dpiConn,
        userName: *const ::std::os::raw::c_char,
        userNameLength: u32,
        oldPassword: *const ::std::os::raw::c_char,
        oldPasswordLength: u32,
        newPassword: *const ::std::os::raw::c_char,
        newPasswordLength: u32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiConn_close(
        conn: *mut dpiConn,
        mode: dpiConnCloseMode,
        tag: *const ::std::os::raw::c_char,
        tagLength: u32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiConn_commit(conn: *mut dpiConn) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiConn_create(
        context: *const dpiContext,
        userName: *const ::std::os::raw::c_char,
        userNameLength: u32,
        password: *const ::std::os::raw::c_char,
        passwordLength: u32,
        connectString: *const ::std::os::raw::c_char,
        connectStringLength: u32,
        commonParams: *const dpiCommonCreateParams,
        createParams: *mut dpiConnCreateParams,
        conn: *mut *mut dpiConn,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiConn_deqObject(
        conn: *mut dpiConn,
        queueName: *const ::std::os::raw::c_char,
        queueNameLength: u32,
        options: *mut dpiDeqOptions,
        props: *mut dpiMsgProps,
        payload: *mut dpiObject,
        msgId: *mut *const ::std::os::raw::c_char,
        msgIdLength: *mut u32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiConn_enqObject(
        conn: *mut dpiConn,
        queueName: *const ::std::os::raw::c_char,
        queueNameLength: u32,
        options: *mut dpiEnqOptions,
        props: *mut dpiMsgProps,
        payload: *mut dpiObject,
        msgId: *mut *const ::std::os::raw::c_char,
        msgIdLength: *mut u32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiConn_getObjectType(
        conn: *mut dpiConn,
        name: *const ::std::os::raw::c_char,
        nameLength: u32,
        objType: *mut *mut dpiObjectType,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiConn_getServerVersion(
        conn: *mut dpiConn,
        releaseString: *mut *const ::std::os::raw::c_char,
        releaseStringLength: *mut u32,
        versionInfo: *mut dpiVersionInfo,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiConn_getSodaDb(conn: *mut dpiConn, db: *mut *mut dpiSodaDb) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiConn_newTempLob(
        conn: *mut dpiConn,
        lobType: dpiOracleTypeNum,
        lob: *mut *mut dpiLob,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiConn_ping(conn: *mut dpiConn) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiConn_release(conn: *mut dpiConn) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiConn_rollback(conn: *mut dpiConn) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiConn_shutdownDatabase(
        conn: *mut dpiConn,
        mode: dpiShutdownMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiConn_startupDatabase(
        conn: *mut dpiConn,
        mode: dpiStartupMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiConn_startupDatabaseWithPfile(
        conn: *mut dpiConn,
        pfile: *const ::std::os::raw::c_char,
        pfileLength: u32,
        mode: dpiStartupMode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiConn_subscribe(
        conn: *mut dpiConn,
        params: *mut dpiSubscrCreateParams,
        subscr: *mut *mut dpiSubscr,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiConn_tpcBegin(
        conn: *mut dpiConn,
        xid: *mut dpiXid,
        transactionTimeout: u32,
        flags: u32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiConn_tpcCommit(
        conn: *mut dpiConn,
        xid: *mut dpiXid,
        onePhase: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiConn_tpcEnd(
        conn: *mut dpiConn,
        xid: *mut dpiXid,
        flags: u32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiConn_tpcForget(conn: *mut dpiConn, xid: *mut dpiXid) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiConn_tpcPrepare(
        conn: *mut dpiConn,
        xid: *mut dpiXid,
        commitNeeded: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiConn_tpcRollback(conn: *mut dpiConn, xid: *mut dpiXid) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiConn_unsubscribe(conn: *mut dpiConn, subscr: *mut dpiSubscr)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiDeqOptions_release(options: *mut dpiDeqOptions) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiEnqOptions_release(options: *mut dpiEnqOptions) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiJson_getValue(
        json: *mut dpiJson,
        options: u32,
        topNode: *mut *mut dpiJsonNode,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiJson_release(json: *mut dpiJson) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiLob_close(lob: *mut dpiLob) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiLob_closeResource(lob: *mut dpiLob) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiLob_copy(lob: *mut dpiLob, copiedLob: *mut *mut dpiLob) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiLob_getChunkSize(lob: *mut dpiLob, size: *mut u32) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiLob_getFileExists(
        lob: *mut dpiLob,
        exists: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiLob_getIsResourceOpen(
        lob: *mut dpiLob,
        isOpen: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiLob_getSize(lob: *mut dpiLob, size: *mut u64) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiLob_openResource(lob: *mut dpiLob) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiLob_readBytes(
        lob: *mut dpiLob,
        offset: u64,
        amount: u64,
        value: *mut ::std::os::raw::c_char,
        valueLength: *mut u64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiLob_release(lob: *mut dpiLob) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiLob_setFromBytes(
        lob: *mut dpiLob,
        value: *const ::std::os::raw::c_char,
        valueLength: u64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiLob_trim(lob: *mut dpiLob, newSize: u64) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiLob_writeBytes(
        lob: *mut dpiLob,
        offset: u64,
        value: *const ::std::os::raw::c_char,
        valueLength: u64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiMsgProps_release(props: *mut dpiMsgProps) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiObject_release(obj: *mut dpiObject) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiObjectAttr_release(attr: *mut dpiObjectAttr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiObjectType_release(objType: *mut dpiObjectType) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiPool_acquireConnection(
        pool: *mut dpiPool,
        userName: *const ::std::os::raw::c_char,
        userNameLength: u32,
        password: *const ::std::os::raw::c_char,
        passwordLength: u32,
        createParams: *mut dpiConnCreateParams,
        conn: *mut *mut dpiConn,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiPool_close(pool: *mut dpiPool, closeMode: dpiPoolCloseMode) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiPool_create(
        context: *const dpiContext,
        userName: *const ::std::os::raw::c_char,
        userNameLength: u32,
        password: *const ::std::os::raw::c_char,
        passwordLength: u32,
        connectString: *const ::std::os::raw::c_char,
        connectStringLength: u32,
        commonParams: *const dpiCommonCreateParams,
        createParams: *mut dpiPoolCreateParams,
        pool: *mut *mut dpiPool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiPool_release(pool: *mut dpiPool) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiQueue_deqMany(
        queue: *mut dpiQueue,
        numProps: *mut u32,
        props: *mut *mut dpiMsgProps,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiQueue_deqOne(
        queue: *mut dpiQueue,
        props: *mut *mut dpiMsgProps,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiQueue_enqMany(
        queue: *mut dpiQueue,
        numProps: u32,
        props: *mut *mut dpiMsgProps,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiQueue_enqOne(queue: *mut dpiQueue, props: *mut dpiMsgProps) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiQueue_release(queue: *mut dpiQueue) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiPool_reconfigure(
        pool: *mut dpiPool,
        minSessions: u32,
        maxSessions: u32,
        sessionIncrement: u32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaColl_createIndex(
        coll: *mut dpiSodaColl,
        indexSpec: *const ::std::os::raw::c_char,
        indexSpecLength: u32,
        flags: u32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaColl_drop(
        coll: *mut dpiSodaColl,
        flags: u32,
        isDropped: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaColl_dropIndex(
        coll: *mut dpiSodaColl,
        name: *const ::std::os::raw::c_char,
        nameLength: u32,
        flags: u32,
        isDropped: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaColl_find(
        coll: *mut dpiSodaColl,
        options: *const dpiSodaOperOptions,
        flags: u32,
        cursor: *mut *mut dpiSodaDocCursor,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaColl_findOne(
        coll: *mut dpiSodaColl,
        options: *const dpiSodaOperOptions,
        flags: u32,
        doc: *mut *mut dpiSodaDoc,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaColl_getDataGuide(
        coll: *mut dpiSodaColl,
        flags: u32,
        doc: *mut *mut dpiSodaDoc,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaColl_getDocCount(
        coll: *mut dpiSodaColl,
        options: *const dpiSodaOperOptions,
        flags: u32,
        count: *mut u64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaColl_insertMany(
        coll: *mut dpiSodaColl,
        numDocs: u32,
        docs: *mut *mut dpiSodaDoc,
        flags: u32,
        insertedDocs: *mut *mut dpiSodaDoc,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaColl_insertManyWithOptions(
        coll: *mut dpiSodaColl,
        numDocs: u32,
        docs: *mut *mut dpiSodaDoc,
        options: *mut dpiSodaOperOptions,
        flags: u32,
        insertedDocs: *mut *mut dpiSodaDoc,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaColl_insertOne(
        coll: *mut dpiSodaColl,
        doc: *mut dpiSodaDoc,
        flags: u32,
        insertedDoc: *mut *mut dpiSodaDoc,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaColl_insertOneWithOptions(
        coll: *mut dpiSodaColl,
        doc: *mut dpiSodaDoc,
        options: *mut dpiSodaOperOptions,
        flags: u32,
        insertedDoc: *mut *mut dpiSodaDoc,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaColl_listIndexes(
        coll: *mut dpiSodaColl,
        flags: u32,
        list: *mut dpiStringList,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaColl_release(coll: *mut dpiSodaColl) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaColl_remove(
        coll: *mut dpiSodaColl,
        options: *const dpiSodaOperOptions,
        flags: u32,
        count: *mut u64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaColl_replaceOne(
        coll: *mut dpiSodaColl,
        options: *const dpiSodaOperOptions,
        doc: *mut dpiSodaDoc,
        flags: u32,
        replaced: *mut ::std::os::raw::c_int,
        replacedDoc: *mut *mut dpiSodaDoc,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaColl_save(
        coll: *mut dpiSodaColl,
        doc: *mut dpiSodaDoc,
        flags: u32,
        savedDoc: *mut *mut dpiSodaDoc,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaColl_saveWithOptions(
        coll: *mut dpiSodaColl,
        doc: *mut dpiSodaDoc,
        options: *mut dpiSodaOperOptions,
        flags: u32,
        savedDoc: *mut *mut dpiSodaDoc,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaColl_truncate(coll: *mut dpiSodaColl) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaCollCursor_getNext(
        cursor: *mut dpiSodaCollCursor,
        flags: u32,
        coll: *mut *mut dpiSodaColl,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaCollCursor_release(cursor: *mut dpiSodaCollCursor) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaDb_createCollection(
        db: *mut dpiSodaDb,
        name: *const ::std::os::raw::c_char,
        nameLength: u32,
        metadata: *const ::std::os::raw::c_char,
        metadataLength: u32,
        flags: u32,
        coll: *mut *mut dpiSodaColl,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaDb_getCollections(
        db: *mut dpiSodaDb,
        startName: *const ::std::os::raw::c_char,
        startNameLength: u32,
        flags: u32,
        cursor: *mut *mut dpiSodaCollCursor,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaDb_getCollectionNames(
        db: *mut dpiSodaDb,
        startName: *const ::std::os::raw::c_char,
        startNameLength: u32,
        limit: u32,
        flags: u32,
        names: *mut dpiStringList,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaDb_openCollection(
        db: *mut dpiSodaDb,
        name: *const ::std::os::raw::c_char,
        nameLength: u32,
        flags: u32,
        coll: *mut *mut dpiSodaColl,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaDb_release(db: *mut dpiSodaDb) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaDoc_release(doc: *mut dpiSodaDoc) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaDocCursor_getNext(
        cursor: *mut dpiSodaDocCursor,
        flags: u32,
        doc: *mut *mut dpiSodaDoc,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSodaDocCursor_release(cursor: *mut dpiSodaDocCursor) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiStmt_execute(
        stmt: *mut dpiStmt,
        mode: dpiExecMode,
        numQueryColumns: *mut u32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiStmt_executeMany(
        stmt: *mut dpiStmt,
        mode: dpiExecMode,
        numIters: u32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiStmt_fetch(
        stmt: *mut dpiStmt,
        found: *mut ::std::os::raw::c_int,
        bufferRowIndex: *mut u32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiStmt_fetchRows(
        stmt: *mut dpiStmt,
        maxRows: u32,
        bufferRowIndex: *mut u32,
        numRowsFetched: *mut u32,
        moreRows: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiStmt_release(stmt: *mut dpiStmt) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiStmt_scroll(
        stmt: *mut dpiStmt,
        mode: dpiFetchMode,
        offset: i32,
        rowCountOffset: i32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiSubscr_release(subscr: *mut dpiSubscr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiVar_release(var: *mut dpiVar) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn dpiVar_setFromBytes(
        var: *mut dpiVar,
        pos: u32,
        value: *const ::std::os::raw::c_char,
        valueLength: u32,
    ) -> ::std::os::raw::c_int;
}
